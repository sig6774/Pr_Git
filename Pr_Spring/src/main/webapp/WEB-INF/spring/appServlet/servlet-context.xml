<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.3.xsd
		http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd">

	<!-- 자동으로 컨트롤러와 매핑 메서드 탐색 (handler mapping과 handler adapter bean 등록)-->
	<annotation-driven />

	<!-- css, img, js ... 의 파일 경로가 복잡할 때 많이 사용  -->
	<resources mapping="/resources/**" location="/resources/" />
	<resources mapping="/img/**" location="/resources/img/" />
	<resources mapping="/css/**" location="/resources/css/" />
	<resources mapping="/fonts/**" location="/resources/fonts/" />
	<resources mapping="/js/**" location="/resources/js/" />

	<!-- 컨트롤러가 리턴한 문자열 앞, 뒤에 적절한 경로를 붙여서 화면을 응답할 수 있도록 도와주는 viewResolver -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	
	<!-- annotation으로 등록된 클래스 객체들을 탐색해 주는 설정 태그이며 
		 base-package에다가 탐색한 패키지 경로를 작성하면 하위 패키지까지 모두 검색  -->
	<!-- 자동 bean 등록  -->
	<context:component-scan base-package="com.spring.pr" />
	<!-- <interceptors>
		<interceptor>
			<mapping path=""/>
			<beans:bean class ="com.spring.pr.util.interceptor.UserLoginSuccessHandler"></beans:bean>
		</interceptor>
	</interceptors> -->
	
	<!-- 
		공통 로그들, 예외 처리 내용들을 기존 클래스와 분리해서 객체 지향적으로 사용하기 위해 
		Aspect(공통 로직)와 Target(Service 클래스들, 메서드들)을 연결할 수 있도록
		가상 환경을 구축해주는 bean  
	 -->
	<aop:aspectj-autoproxy />
	
	
</beans:beans>